// This is an empty scss file for your custom styles - Please add your super duper awesome mega design styles here

body {
    background-color: $light-gray;
    color: $black;
}

h1 {
    font-size: clamp(1.875rem, 0.5357rem + 4.2857vw, 3.75rem);
}

#main-nav {
    background-color: $white;
}

.major-container {
    background-color: $light-blue;
    padding: 6rem 5rem 3.5rem 5rem;
    margin-bottom: 5rem;
}

.dlinq-description {
    padding: 2rem;
}

#full-width-home-wrapper {
    padding-top: 0;
}

.topic-row {
    margin-top: 3rem;
    padding: 2rem;
}

.topic-row{
    border-top: 3px solid $green;
}

.topic-row:nth-of-type(1){
    border-top: none;
}

.topic-list {
    font-size: 1.3rem;
}


//deal with wp admin bar and fixed top menu really well
//https://notlaura.com/a-quick-css-algorithm-for-handling-the-wp-admin-bar-with-a-fixed-menu/
:root {
  // 1. Set up the constant values
  // It's best practice to keep custom property values unit-less, lest you run into issues I don't understand well enough to explain here.
  --login-bar-height: 0;
  --menu-bar-height: 50;
}

// 2. Conditionally adjust the height of the login bar based on WordPress' values.
// if body has class "logged-in" and screen is > 783px, update the value.
.logged-in { // This class is added to <body> by WordPress
  @media ( min-width: 783px ) { // Breakpoint comes from WordPress
    --login-bar-height: 32;
  }
}

// 3. Bind the custom property values to regular properties.
// When the login bar isn't here, the value of the --login-bar-height 
// property will be 0 because of our conditional above. 
// So satisfying and clean and great!!!
// Is CSS a programming language? 
.navbar {
  // Fix the menu bar. This would also work for an absolutely positioned bar.
  width: 100%;
  position: fixed;
  
  // Use calc to apply a unit to the custom property value
  top: calc( var( --login-bar-height ) * 1px ); 
  height: calc( var( --menu-bar-height ) * 1px );
}

.main-content {
  // Pad the top of the content to account for both the menu and login bar height.
  padding-top: calc( ( var( --menu-bar-height ) + var( --login-bar-height ) ) * 1px );
}




