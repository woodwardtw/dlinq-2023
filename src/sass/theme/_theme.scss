// This is an empty scss file for your custom styles - Please add your super duper awesome mega design styles here
html {
	scroll-behavior: smooth;
  scroll-padding-top: 100px;
}

body {
  color: $black;
}

#content {
    background: linear-gradient(90deg, $white 50%, $light-gray 50%);
}

h1, h2, h3, h4, h5 {
    font-family: DINCondensedBold,Arial,Helvetica,Verdana,sans-serif;
    color: $blue;
    font-weight: 700;
}

h1 {
    font-size: clamp(1.875rem, 0.5357rem + 6vw, 4.25rem);
}

h2 {
    font-size: clamp(1.5rem, 0.5357rem + 3.5vw, 3rem);
}

p {
  margin-top: 1.2rem;
  font-size: 1.3rem;
  font-family: "pt serif",Georgia,Times,Times New Roman,serif;
}

#main-nav {
    background-color: $white;
    box-shadow: 0px 1px 1px 0px #efefef;
}

#home-top-menu a {
  text-decoration: none;
  border-bottom: 1px dashed $white;
}

.particles-js-canvas-el{
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  z-index: 0;
  position: absolute;
  height: 100%;
  width: 100%;
  background-size: cover;
  background-position: 50% 50%;
  background-repeat: no-repeat;
}


.menu-block {
  margin: 1rem auto 0 auto;
  width: 90%;
  padding: 2rem;
  // background-color: $white;
  border-left: 4px solid $blue;
}

//home page work
.major-container {
    height: 400px;
    background-color: $blue;
    padding: 6rem 5rem 3.5rem 5rem;
    margin-bottom: 5rem;
   // background-image: url(../imgs/tears.svg);
    background-size: 48vw;
    background-position: left center;
    background-repeat: no-repeat;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
}

.major-container h1, .major-container h2, .major-container h3, .major-container li, .major-container a {
  color: $white;
   z-index: 100;
  position: relative;
}

.home .major-container {
  margin-top: 50px;
}


.dlinq-description {
    padding: 2rem;
    z-index: 100;
    color: $white;
}

 #home-top-menu li {
  font-size: 1.3rem;
 }

.dlinq-description h2 {
  margin-top: 1rem;
}

#full-width-home-wrapper {
    padding-top: 0;
}

.event-row {
  padding: 2rem 2rem 2rem 2rem;
  background-color: $green;
}

.alert-row {
  padding: 5rem 2rem 2rem 2rem;
  background-color: $yellow;
}

.topic-row {
    margin-top: 3rem;
    padding: 5rem 2rem 2rem 2rem;
    border-top: 1px dashed $blue;
}

.topic-row:first-of-type{
    border-top: none;
}

.topic-row:last-of-type{
  padding-bottom: 10rem;
}

.topic-list {
    font-size: 1.3rem;
    margin-top: 3rem;
}

.topic-list a {
  text-decoration: none;
  border-bottom: 1px dashed $blue;
}

.btn-dlinq {
  background-color: $blue;
  color: $white;
  border-radius: 50px;
  padding: 10px 20px;
  display: block;
  margin: 3rem auto;
  transition: all .4s ease;
  max-width: 300px;
  text-align: center;
}

.btn-dlinq:hover {
    color: #fff;
    background-color: $blue;
    transform: scale(1.02);
}

.resource-links, .sub-topic-list {
  font-size: 1.2rem;
  font-weight: 600;
}


//person work
.person {
  margin-top: 1rem;
}

.person-details {
  z-index: 100;
  color: $white;
  position: relative;
}


//project work
.bio-pic-project {
  max-width: 150px;
  max-height: 150px;
}

//topic work
.accordion-button {
  font-size: 1.4rem;
}
.event-count {
  font-weight: 700;
  margin: 1rem;
  height: 2rem;
  line-height: 2rem;
  width: 2rem;
  border-radius: 50%;
  background-color: $blue;
  color: $white;
  text-align: center;
  text-align: center;
   animation: pulse 3s infinite;
}

.accordion-item, .accordion-item:last-of-type, .accordion-item:first-of-type {
  border-radius: 0;
}

//events calendar overrides
#eventAccordion .tribe-common .tribe-common-c-btn-border, #eventAccordion  .tribe-common a.tribe-common-c-btn-border {  
  border-color: $blue;
  color: $blue;
}

#eventAccordion .tribe-events .tribe-events-c-subscribe-dropdown .tribe-events-c-subscribe-dropdown__button:hover {
  background-color: $blue;
  color: $white;
}

.full-width-row {
  background-color: $white;
}

//deal with wp admin bar and fixed top menu really well
//https://notlaura.com/a-quick-css-algorithm-for-handling-the-wp-admin-bar-with-a-fixed-menu/
:root {
  // 1. Set up the constant values
  // It's best practice to keep custom property values unit-less, lest you run into issues I don't understand well enough to explain here.
  --login-bar-height: 0;
  --menu-bar-height: 50;
}

// 2. Conditionally adjust the height of the login bar based on WordPress' values.
// if body has class "logged-in" and screen is > 783px, update the value.
.logged-in { // This class is added to <body> by WordPress
  @media ( min-width: 783px ) { // Breakpoint comes from WordPress
    --login-bar-height: 32;
  }
}

// 3. Bind the custom property values to regular properties.
// When the login bar isn't here, the value of the --login-bar-height 
// property will be 0 because of our conditional above. 
// So satisfying and clean and great!!!
// Is CSS a programming language? 
.navbar {
  // Fix the menu bar. This would also work for an absolutely positioned bar.
  width: 100%;
  position: fixed;
  
  // Use calc to apply a unit to the custom property value
  top: calc( var( --login-bar-height ) * 1px ); 
  height: calc( var( --menu-bar-height ) * 1px );
}

.main-content {
  // Pad the top of the content to account for both the menu and login bar height.
  padding-top: calc( ( var( --menu-bar-height ) + var( --login-bar-height ) ) * 1px );
}






//ANIMATION
@keyframes pulse {
   0% {
		transform: scale(0.95);
		box-shadow: 0 0 0 0 rgba($yellow, 0.7);
	}
	
	70% {
		transform: scale(1);
		box-shadow: 0 0 0 10px rgba($yellow, 0);
	}
	
	100% {
		transform: scale(0.95);
		box-shadow: 0 0 0 0 rgba($yellow, 0);
	}
}

@media only screen and (max-width:768px){
  #content {
    background: $white;
  }

  .major-title {
    font-size: 4rem;
  }

  .major-container {
    height: auto;
    padding: 6rem 2rem;
  }

}